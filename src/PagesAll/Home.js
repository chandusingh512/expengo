import React, { useState } from 'react';
import axios from 'axios';
import OAuth from 'oauth-1.0a';
import CryptoJS from 'crypto-js';
import Navbar from './Navbar'
import UserList from './UserList'

const consumerKey = '8885859a-b6c7-49b8-8b6f-ba7a6feea368!chandu.singh@exavalu.dev.com';
const consumerSecret = '23f179c2-1071-4317-8a24-298abbf0c723';

// Initialize OAuth object
const oauth = OAuth({
  consumer: { key: consumerKey, secret: consumerSecret },
  signature_method: 'HMAC-SHA1',
  hash_function(base_string, key) {

   
   const hashValue= CryptoJS.HmacSHA1(base_string, key).toString(CryptoJS.enc.Base64);
   console.log('hashValue= ',hashValue);
    return hashValue;
    
  }
});

const data = `<?xml version="1.0"?>
<documentRequest>
  <projectId>690246194</projectId>
  <properties>
    <name>merge.pdf</name>
    <value>true</value>
  </properties>
  <batchConfigResId>690792852</batchConfigResId>
  <transactionData></transactionData>
  <transactionRange>1</transactionRange>
  <transactionDataType>string</transactionDataType>
</documentRequest>
`;
const requestData = {
  url: 'https://na10-sb.smartcommunications.cloud/one/oauth1/api/v12/job/generateDraft?includeDocumentData=true',
  method: 'POST',
  data: data 
};

const requestBody = {
  ...requestData,
  headers: oauth.toHeader(oauth.authorize(requestData)),'Content-Type': 'application/xml',
};

const Home = () => {
  const [response, setResponse] = useState('');

  const fetchData = async () => {
    try {
      const res = await axios(requestBody);
      setResponse(res.data);
    } catch (error) {
      console.error('Error:', error);
    }
  };

  return (
    <div>
    <Navbar/>
    <UserList/>
      <button onClick={fetchData}>Fetch Data</button>
      <div>{response}</div>
    </div>
  );
};

export default Home;
